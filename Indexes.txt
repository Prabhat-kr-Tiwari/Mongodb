ecom> for( let i=1;i<5000;i++){
... db.products.insert({name:"product"+i, price:i })
... }
DeprecationWarning: Collection.insert() is deprecated. Use insertOne, insertMany, or bulkWrite.
{
  acknowledged: true,
  insertedIds: { '0': ObjectId("652052c2dc1ba0769c2c6a50") }
}
ecom> db.products.find()
[
  {
    _id: ObjectId("652039b8dc1ba0769c2c56c5"),
    name: 'keyboard',
    category: 'computers '
  },
  { _id: ObjectId("65203bf1dc1ba0769c2c56c6"), name: 'keyboard' },
  { _id: ObjectId("65204170dc1ba0769c2c56c8"), name: 'pen', price: 5 },
  { _id: ObjectId("6520465ddc1ba0769c2c56c9"), name: 'usb', price: 10 },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56ca"),
    name: 'product1',
    price: 1
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56cb"),
    name: 'product2',
    price: 2
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56cc"),
    name: 'product3',
    price: 3
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56cd"),
    name: 'product4',
    price: 4
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56ce"),
    name: 'product5',
    price: 5
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56cf"),
    name: 'product6',
    price: 6
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56d0"),
    name: 'product7',
    price: 7
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56d1"),
    name: 'product8',
    price: 8
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56d2"),
    name: 'product9',
    price: 9
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56d3"),
    name: 'product10',
    price: 10
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56d4"),
    name: 'product11',
    price: 11
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56d5"),
    name: 'product12',
    price: 12
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56d6"),
    name: 'product13',
    price: 13
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56d7"),
    name: 'product14',
    price: 14
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56d8"),
    name: 'product15',
    price: 15
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56d9"),
    name: 'product16',
    price: 16
  }
]
Type "it" for more
ecom> it
[
  {
    _id: ObjectId("652052b8dc1ba0769c2c56da"),
    name: 'product17',
    price: 17
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56db"),
    name: 'product18',
    price: 18
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56dc"),
    name: 'product19',
    price: 19
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56dd"),
    name: 'product20',
    price: 20
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56de"),
    name: 'product21',
    price: 21
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56df"),
    name: 'product22',
    price: 22
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56e0"),
    name: 'product23',
    price: 23
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56e1"),
    name: 'product24',
    price: 24
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56e2"),
    name: 'product25',
    price: 25
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56e3"),
    name: 'product26',
    price: 26
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56e4"),
    name: 'product27',
    price: 27
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56e5"),
    name: 'product28',
    price: 28
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56e6"),
    name: 'product29',
    price: 29
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56e7"),
    name: 'product30',
    price: 30
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56e8"),
    name: 'product31',
    price: 31
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56e9"),
    name: 'product32',
    price: 32
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56ea"),
    name: 'product33',
    price: 33
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56eb"),
    name: 'product34',
    price: 34
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56ec"),
    name: 'product35',
    price: 35
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56ed"),
    name: 'product36',
    price: 36
  }
]
Type "it" for more
ecom> it
[
  {
    _id: ObjectId("652052b8dc1ba0769c2c56ee"),
    name: 'product37',
    price: 37
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56ef"),
    name: 'product38',
    price: 38
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56f0"),
    name: 'product39',
    price: 39
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56f1"),
    name: 'product40',
    price: 40
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56f2"),
    name: 'product41',
    price: 41
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56f3"),
    name: 'product42',
    price: 42
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56f4"),
    name: 'product43',
    price: 43
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56f5"),
    name: 'product44',
    price: 44
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56f6"),
    name: 'product45',
    price: 45
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56f7"),
    name: 'product46',
    price: 46
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56f8"),
    name: 'product47',
    price: 47
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56f9"),
    name: 'product48',
    price: 48
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56fa"),
    name: 'product49',
    price: 49
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56fb"),
    name: 'product50',
    price: 50
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56fc"),
    name: 'product51',
    price: 51
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56fd"),
    name: 'product52',
    price: 52
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56fe"),
    name: 'product53',
    price: 53
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c56ff"),
    name: 'product54',
    price: 54
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c5700"),
    name: 'product55',
    price: 55
  },
  {
    _id: ObjectId("652052b8dc1ba0769c2c5701"),
    name: 'product56',
    price: 56
  }
]
Type "it" for more
ecom> db.product.find({name:"product2000"})

ecom> db.products.find({name:"product2000"})
[
  {
    _id: ObjectId("652052bddc1ba0769c2c5e99"),
    name: 'product2000',
    price: 2000
  }
]
ecom> db.products.find({name:"product2000"}).explain('executionStats')
{
  explainVersion: '2',
  queryPlanner: {
    namespace: 'ecom.products',
    indexFilterSet: false,
    parsedQuery: { name: { '$eq': 'product2000' } },
    queryHash: '1AD872C6',
    planCacheKey: '41BDA4B1',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      queryPlan: {
        stage: 'COLLSCAN',
        planNodeId: 1,
        filter: { name: { '$eq': 'product2000' } },
        direction: 'forward'
      },
      slotBasedPlan: {
        slots: '$$RESULT=s5 env: { s1 = TimeZoneDatabase(Indian/Mayotte...Etc/Greenwich) (timeZoneDB), s2 = Nothing (SEARCH_META), s3 = 1696617420399 (NOW), s7 = "product2000" }',
        stages: '[1] filter {traverseF(s4, lambda(l1.0) { ((l1.0 == s7) ?: false) }, false)} \n' +
          '[1] scan s5 s6 none none none none lowPriority [s4 = name] @"14cfa638-a69f-4ff6-af0b-ef8ed2309503" true false '
      }
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 1,
    executionTimeMillis: 5,
    totalKeysExamined: 0,
    totalDocsExamined: 5003,
    executionStages: {
      stage: 'filter',
      planNodeId: 1,
      nReturned: 1,
      executionTimeMillisEstimate: 4,
      opens: 1,
      closes: 1,
      saveState: 5,
      restoreState: 5,
      isEOF: 1,
      numTested: 5003,
      filter: 'traverseF(s4, lambda(l1.0) { ((l1.0 == s7) ?: false) }, false) ',
      inputStage: {
        stage: 'scan',
        planNodeId: 1,
        nReturned: 5003,
        executionTimeMillisEstimate: 4,
        opens: 1,
        closes: 1,
        saveState: 5,
        restoreState: 5,
        isEOF: 1,
        numReads: 5003,
        recordSlot: 5,
        recordIdSlot: 6,
        fields: [ 'name' ],
        outputSlots: [ Long("4") ]
      }
    }
  },
  command: { find: 'products', filter: { name: 'product2000' }, '$db': 'ecom' },
  serverInfo: {
    host: 'LAPTOP-8NRR2ALP',
    port: 27017,
    version: '7.0.2',
    gitVersion: '02b3c655e1302209ef046da6ba3ef6749dd0b62a'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeEngine'
  },
  ok: 1
}
ecom> db.products.createIndex({name:1})
name_1
ecom> db.products.find({name:"product2000"}).explain('executionStats')
{
  explainVersion: '2',
  queryPlanner: {
    namespace: 'ecom.products',
    indexFilterSet: false,
    parsedQuery: { name: { '$eq': 'product2000' } },
    queryHash: '1AD872C6',
    planCacheKey: 'EF162EC1',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      queryPlan: {
        stage: 'FETCH',
        planNodeId: 2,
        inputStage: {
          stage: 'IXSCAN',
          planNodeId: 1,
          keyPattern: { name: 1 },
          indexName: 'name_1',
          isMultiKey: false,
          multiKeyPaths: { name: [] },
          isUnique: false,
          isSparse: false,
          isPartial: false,
          indexVersion: 2,
          direction: 'forward',
          indexBounds: { name: [ '["product2000", "product2000"]' ] }
        }
      },
      slotBasedPlan: {
        slots: '$$RESULT=s11 env: { s1 = TimeZoneDatabase(Indian/Mayotte...Etc/Greenwich) (timeZoneDB), s2 = Nothing (SEARCH_META), s3 = 1696617640648 (NOW), s5 = KS(3C70726F6475637432303030000104), s6 = KS(3C70726F647563743230303000FE04), s10 = {"name" : 1} }',
        stages: '[2] nlj inner [] [s4, s7, s8, s9, s10] \n' +
          '    left \n' +
          '        [1] cfilter {(exists(s5) && exists(s6))} \n' +
          '        [1] ixseek s5 s6 s9 s4 s7 s8 [] @"14cfa638-a69f-4ff6-af0b-ef8ed2309503" @"name_1" true \n' +
          '    right \n' +
          '        [2] limit 1 \n' +
          '        [2] seek s4 s11 s12 s7 s8 s9 s10 [] @"14cfa638-a69f-4ff6-af0b-ef8ed2309503" true false \n'
      }
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 1,
    executionTimeMillis: 31,
    totalKeysExamined: 1,
    totalDocsExamined: 1,
    executionStages: {
      stage: 'nlj',
      planNodeId: 2,
      nReturned: 1,
      executionTimeMillisEstimate: 29,
      opens: 1,
      closes: 1,
      saveState: 1,
      restoreState: 1,
      isEOF: 1,
      totalDocsExamined: 1,
      totalKeysExamined: 1,
      collectionScans: 0,
      collectionSeeks: 1,
      indexScans: 0,
      indexSeeks: 1,
      indexesUsed: [ 'name_1' ],
      innerOpens: 1,
      innerCloses: 1,
      outerProjects: [],
      outerCorrelated: [ Long("4"), Long("7"), Long("8"), Long("9"), Long("10") ],
      outerStage: {
        stage: 'cfilter',
        planNodeId: 1,
        nReturned: 1,
        executionTimeMillisEstimate: 29,
        opens: 1,
        closes: 1,
        saveState: 1,
        restoreState: 1,
        isEOF: 1,
        numTested: 1,
        filter: '(exists(s5) && exists(s6)) ',
        inputStage: {
          stage: 'ixseek',
          planNodeId: 1,
          nReturned: 1,
          executionTimeMillisEstimate: 29,
          opens: 1,
          closes: 1,
          saveState: 1,
          restoreState: 1,
          isEOF: 1,
          indexName: 'name_1',
          keysExamined: 1,
          seeks: 1,
          numReads: 2,
          indexKeySlot: 9,
          recordIdSlot: 4,
          snapshotIdSlot: 7,
          indexIdentSlot: 8,
          outputSlots: [],
          indexKeysToInclude: '00000000000000000000000000000000',
          seekKeyLow: 's5 ',
          seekKeyHigh: 's6 '
        }
      },
      innerStage: {
        stage: 'limit',
        planNodeId: 2,
        nReturned: 1,
        executionTimeMillisEstimate: 0,
        opens: 1,
        closes: 1,
        saveState: 1,
        restoreState: 1,
        isEOF: 1,
        limit: 1,
        inputStage: {
          stage: 'seek',
          planNodeId: 2,
          nReturned: 1,
          executionTimeMillisEstimate: 0,
          opens: 1,
          closes: 1,
          saveState: 1,
          restoreState: 1,
          isEOF: 0,
          numReads: 1,
          recordSlot: 11,
          recordIdSlot: 12,
          seekKeySlot: 4,
          snapshotIdSlot: 7,
          indexIdentSlot: 8,
          indexKeySlot: 9,
          indexKeyPatternSlot: 10,
          fields: [],
          outputSlots: []
        }
      }
    }
  },
  command: { find: 'products', filter: { name: 'product2000' }, '$db': 'ecom' },
  serverInfo: {
    host: 'LAPTOP-8NRR2ALP',
    port: 27017,
    version: '7.0.2',
    gitVersion: '02b3c655e1302209ef046da6ba3ef6749dd0b62a'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeEngine'
  },
  ok: 1
}
ecom> db.products.dropIndex('name_1')
{ nIndexesWas: 2, ok: 1 }
ecom> db.products.getIndexes()
[ { v: 2, key: { _id: 1 }, name: '_id_' } ]}
ecom> db.products.find({name:"product5000"}).explain('executionStats')
{
  explainVersion: '2',
  queryPlanner: {
    namespace: 'ecom.products',
    indexFilterSet: false,
    parsedQuery: { name: { '$eq': 'product5000' } },
    queryHash: '1AD872C6',
    planCacheKey: 'DC04E487',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      queryPlan: {
        stage: 'COLLSCAN',
        planNodeId: 1,
        filter: { name: { '$eq': 'product5000' } },
        direction: 'forward'
      },
      slotBasedPlan: {
        slots: '$$RESULT=s5 env: { s7 = "product5000", s2 = Nothing (SEARCH_META), s3 = 1696618017622 (NOW), s1 = TimeZoneDatabase(Indian/Mayotte...Etc/Greenwich) (timeZoneDB) }',
        stages: '[1] filter {traverseF(s4, lambda(l1.0) { ((l1.0 == s7) ?: false) }, false)} \n' +
          '[1] scan s5 s6 none none none none lowPriority [s4 = name] @"14cfa638-a69f-4ff6-af0b-ef8ed2309503" true false '
      }
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 0,
    executionTimeMillis: 4,
    totalKeysExamined: 0,
    totalDocsExamined: 5003,
    executionStages: {
      stage: 'filter',
      planNodeId: 1,
      nReturned: 0,
      executionTimeMillisEstimate: 4,
      opens: 1,
      closes: 1,
      saveState: 5,
      restoreState: 5,
      isEOF: 1,
      numTested: 5003,
      filter: 'traverseF(s4, lambda(l1.0) { ((l1.0 == s7) ?: false) }, false) ',
      inputStage: {
        stage: 'scan',
        planNodeId: 1,
        nReturned: 5003,
        executionTimeMillisEstimate: 4,
        opens: 1,
        closes: 1,
        saveState: 5,
        restoreState: 5,
        isEOF: 1,
        numReads: 5003,
        recordSlot: 5,
        recordIdSlot: 6,
        fields: [ 'name' ],
        outputSlots: [ Long("4") ]
      }
    }
  },
  command: { find: 'products', filter: { name: 'product5000' }, '$db': 'ecom' },
  serverInfo: {
    host: 'LAPTOP-8NRR2ALP',
    port: 27017,
    version: '7.0.2',
    gitVersion: '02b3c655e1302209ef046da6ba3ef6749dd0b62a'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeEngine'
  },
  ok: 1
}
ecom> db.products.find({name:"product2000"})
[
  {
    _id: ObjectId("652052bddc1ba0769c2c5e99"),
    name: 'product2000',
    price: 2000
  }
]
ecom> db.products.find({_id: ObjectId("652052bddc1ba0769c2c5e99")})
[
  {
    _id: ObjectId("652052bddc1ba0769c2c5e99"),
    name: 'product2000',
    price: 2000
  }
]
ecom> db.products.find({_id: ObjectId("652052bddc1ba0769c2c5e99")}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'ecom.products',
    indexFilterSet: false,
    parsedQuery: { _id: { '$eq': ObjectId("652052bddc1ba0769c2c5e99") } },
    queryHash: '58F0F49D',
    planCacheKey: 'C14009FE',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: { stage: 'IDHACK' },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 1,
    executionTimeMillis: 1,
    totalKeysExamined: 1,
    totalDocsExamined: 1,
    executionStages: {
      stage: 'IDHACK',
      nReturned: 1,
      executionTimeMillisEstimate: 0,
      works: 2,
      advanced: 1,
      needTime: 0,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      keysExamined: 1,
      docsExamined: 1
    }
  },
  command: {
ecom>
    filter: { _id: ObjectId("652052bddc1ba0769c2c5e99") },
    '$db': 'ecom'
  },
  serverInfo: {
    host: 'LAPTOP-8NRR2ALP',
    port: 27017,
    version: '7.0.2',
    gitVersion: '02b3c655e1302209ef046da6ba3ef6749dd0b62a'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeEngine'
  },
  ok: 1
}
ecom>
